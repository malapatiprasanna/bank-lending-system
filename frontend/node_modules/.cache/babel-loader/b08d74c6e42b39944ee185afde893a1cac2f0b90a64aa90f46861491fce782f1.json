{"ast":null,"code":"const API_BASE_URL = 'http://localhost:3001/api/v1'; // Backend URL\n\nexport const createLoan = async loanData => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/loans`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(loanData)\n    });\n    const data = await response.json();\n    if (!response.ok) {\n      throw new Error(data.message || 'Failed to create loan');\n    }\n    return data;\n  } catch (error) {\n    console.error('Error creating loan:', error);\n    throw error;\n  }\n};\nexport const recordPayment = async (loanId, paymentData) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/loans/${loanId}/payments`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(paymentData)\n    });\n    const data = await response.json();\n    if (!response.ok) {\n      throw new Error(data.message || 'Failed to record payment');\n    }\n    return data;\n  } catch (error) {\n    console.error('Error recording payment:', error);\n    throw error;\n  }\n};\nexport const getLoanLedger = async loanId => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/loans/${loanId}/ledger`);\n    const data = await response.json();\n    if (!response.ok) {\n      throw new Error(data.message || 'Failed to fetch loan ledger');\n    }\n    return data;\n  } catch (error) {\n    console.error('Error fetching loan ledger:', error);\n    throw error;\n  }\n};\nexport const getCustomerOverview = async customerId => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/customers/${customerId}/overview`);\n    const data = await response.json();\n    if (!response.ok) {\n      throw new Error(data.message || 'Failed to fetch customer overview');\n    }\n    return data;\n  } catch (error) {\n    console.error('Error fetching customer overview:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_BASE_URL","createLoan","loanData","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","message","error","console","recordPayment","loanId","paymentData","getLoanLedger","getCustomerOverview","customerId"],"sources":["C:/Users/malap/OneDrive/Desktop/bank-lending-system/frontend/src/api/api.js"],"sourcesContent":["const API_BASE_URL = 'http://localhost:3001/api/v1'; // Backend URL\r\n\r\nexport const createLoan = async (loanData) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/loans`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(loanData),\r\n    });\r\n    const data = await response.json();\r\n    if (!response.ok) {\r\n      throw new Error(data.message || 'Failed to create loan');\r\n    }\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error creating loan:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const recordPayment = async (loanId, paymentData) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/loans/${loanId}/payments`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(paymentData),\r\n    });\r\n    const data = await response.json();\r\n    if (!response.ok) {\r\n      throw new Error(data.message || 'Failed to record payment');\r\n    }\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error recording payment:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getLoanLedger = async (loanId) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/loans/${loanId}/ledger`);\r\n    const data = await response.json();\r\n    if (!response.ok) {\r\n      throw new Error(data.message || 'Failed to fetch loan ledger');\r\n    }\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error fetching loan ledger:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getCustomerOverview = async (customerId) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/customers/${customerId}/overview`);\r\n    const data = await response.json();\r\n    if (!response.ok) {\r\n      throw new Error(data.message || 'Failed to fetch customer overview');\r\n    }\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error fetching customer overview:', error);\r\n    throw error;\r\n  }\r\n};"],"mappings":"AAAA,MAAMA,YAAY,GAAG,8BAA8B,CAAC,CAAC;;AAErD,OAAO,MAAMC,UAAU,GAAG,MAAOC,QAAQ,IAAK;EAC5C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,QAAQ,EAAE;MACpDK,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ;IAC/B,CAAC,CAAC;IACF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClC,IAAI,CAACR,QAAQ,CAACS,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,OAAO,IAAI,uBAAuB,CAAC;IAC1D;IACA,OAAOJ,IAAI;EACb,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,aAAa,GAAG,MAAAA,CAAOC,MAAM,EAAEC,WAAW,KAAK;EAC1D,IAAI;IACF,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,UAAUkB,MAAM,WAAW,EAAE;MACvEb,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACU,WAAW;IAClC,CAAC,CAAC;IACF,MAAMT,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClC,IAAI,CAACR,QAAQ,CAACS,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,OAAO,IAAI,0BAA0B,CAAC;IAC7D;IACA,OAAOJ,IAAI;EACb,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMK,aAAa,GAAG,MAAOF,MAAM,IAAK;EAC7C,IAAI;IACF,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,UAAUkB,MAAM,SAAS,CAAC;IACtE,MAAMR,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClC,IAAI,CAACR,QAAQ,CAACS,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,OAAO,IAAI,6BAA6B,CAAC;IAChE;IACA,OAAOJ,IAAI;EACb,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMM,mBAAmB,GAAG,MAAOC,UAAU,IAAK;EACvD,IAAI;IACF,MAAMnB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,cAAcsB,UAAU,WAAW,CAAC;IAChF,MAAMZ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClC,IAAI,CAACR,QAAQ,CAACS,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,OAAO,IAAI,mCAAmC,CAAC;IACtE;IACA,OAAOJ,IAAI;EACb,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IACzD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}